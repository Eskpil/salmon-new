// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v3.21.12
// source: nodeapi/nodeapi.proto

package nodeapi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListMachinesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMachinesRequest) Reset() {
	*x = ListMachinesRequest{}
	mi := &file_nodeapi_nodeapi_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMachinesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMachinesRequest) ProtoMessage() {}

func (x *ListMachinesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nodeapi_nodeapi_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMachinesRequest.ProtoReflect.Descriptor instead.
func (*ListMachinesRequest) Descriptor() ([]byte, []int) {
	return file_nodeapi_nodeapi_proto_rawDescGZIP(), []int{0}
}

type ListStoragePoolsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListStoragePoolsRequest) Reset() {
	*x = ListStoragePoolsRequest{}
	mi := &file_nodeapi_nodeapi_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListStoragePoolsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStoragePoolsRequest) ProtoMessage() {}

func (x *ListStoragePoolsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nodeapi_nodeapi_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStoragePoolsRequest.ProtoReflect.Descriptor instead.
func (*ListStoragePoolsRequest) Descriptor() ([]byte, []int) {
	return file_nodeapi_nodeapi_proto_rawDescGZIP(), []int{1}
}

type ListStorageVolumesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListStorageVolumesRequest) Reset() {
	*x = ListStorageVolumesRequest{}
	mi := &file_nodeapi_nodeapi_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListStorageVolumesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStorageVolumesRequest) ProtoMessage() {}

func (x *ListStorageVolumesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nodeapi_nodeapi_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStorageVolumesRequest.ProtoReflect.Descriptor instead.
func (*ListStorageVolumesRequest) Descriptor() ([]byte, []int) {
	return file_nodeapi_nodeapi_proto_rawDescGZIP(), []int{2}
}

type ListNetworksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNetworksRequest) Reset() {
	*x = ListNetworksRequest{}
	mi := &file_nodeapi_nodeapi_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNetworksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNetworksRequest) ProtoMessage() {}

func (x *ListNetworksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nodeapi_nodeapi_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNetworksRequest.ProtoReflect.Descriptor instead.
func (*ListNetworksRequest) Descriptor() ([]byte, []int) {
	return file_nodeapi_nodeapi_proto_rawDescGZIP(), []int{3}
}

type CreateVolumeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Pool          string                 `protobuf:"bytes,2,opt,name=pool,proto3" json:"pool,omitempty"`
	Format        string                 `protobuf:"bytes,3,opt,name=format,proto3" json:"format,omitempty"`
	Allocation    uint64                 `protobuf:"varint,4,opt,name=allocation,proto3" json:"allocation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateVolumeRequest) Reset() {
	*x = CreateVolumeRequest{}
	mi := &file_nodeapi_nodeapi_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVolumeRequest) ProtoMessage() {}

func (x *CreateVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nodeapi_nodeapi_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVolumeRequest.ProtoReflect.Descriptor instead.
func (*CreateVolumeRequest) Descriptor() ([]byte, []int) {
	return file_nodeapi_nodeapi_proto_rawDescGZIP(), []int{4}
}

func (x *CreateVolumeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateVolumeRequest) GetPool() string {
	if x != nil {
		return x.Pool
	}
	return ""
}

func (x *CreateVolumeRequest) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *CreateVolumeRequest) GetAllocation() uint64 {
	if x != nil {
		return x.Allocation
	}
	return 0
}

type CreateVolumeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateVolumeResponse) Reset() {
	*x = CreateVolumeResponse{}
	mi := &file_nodeapi_nodeapi_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVolumeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVolumeResponse) ProtoMessage() {}

func (x *CreateVolumeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nodeapi_nodeapi_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVolumeResponse.ProtoReflect.Descriptor instead.
func (*CreateVolumeResponse) Descriptor() ([]byte, []int) {
	return file_nodeapi_nodeapi_proto_rawDescGZIP(), []int{5}
}

type AttachDiskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Disk          *Disk                  `protobuf:"bytes,1,opt,name=disk,proto3" json:"disk,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AttachDiskRequest) Reset() {
	*x = AttachDiskRequest{}
	mi := &file_nodeapi_nodeapi_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttachDiskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachDiskRequest) ProtoMessage() {}

func (x *AttachDiskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nodeapi_nodeapi_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachDiskRequest.ProtoReflect.Descriptor instead.
func (*AttachDiskRequest) Descriptor() ([]byte, []int) {
	return file_nodeapi_nodeapi_proto_rawDescGZIP(), []int{6}
}

func (x *AttachDiskRequest) GetDisk() *Disk {
	if x != nil {
		return x.Disk
	}
	return nil
}

type AttachDiskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AttachDiskResponse) Reset() {
	*x = AttachDiskResponse{}
	mi := &file_nodeapi_nodeapi_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttachDiskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachDiskResponse) ProtoMessage() {}

func (x *AttachDiskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nodeapi_nodeapi_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachDiskResponse.ProtoReflect.Descriptor instead.
func (*AttachDiskResponse) Descriptor() ([]byte, []int) {
	return file_nodeapi_nodeapi_proto_rawDescGZIP(), []int{7}
}

type AttachInterfaceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Network       string                 `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AttachInterfaceRequest) Reset() {
	*x = AttachInterfaceRequest{}
	mi := &file_nodeapi_nodeapi_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttachInterfaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachInterfaceRequest) ProtoMessage() {}

func (x *AttachInterfaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nodeapi_nodeapi_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachInterfaceRequest.ProtoReflect.Descriptor instead.
func (*AttachInterfaceRequest) Descriptor() ([]byte, []int) {
	return file_nodeapi_nodeapi_proto_rawDescGZIP(), []int{8}
}

func (x *AttachInterfaceRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

type AttachInterfaceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AttachInterfaceResponse) Reset() {
	*x = AttachInterfaceResponse{}
	mi := &file_nodeapi_nodeapi_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttachInterfaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachInterfaceResponse) ProtoMessage() {}

func (x *AttachInterfaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nodeapi_nodeapi_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachInterfaceResponse.ProtoReflect.Descriptor instead.
func (*AttachInterfaceResponse) Descriptor() ([]byte, []int) {
	return file_nodeapi_nodeapi_proto_rawDescGZIP(), []int{9}
}

type PingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	mi := &file_nodeapi_nodeapi_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nodeapi_nodeapi_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_nodeapi_nodeapi_proto_rawDescGZIP(), []int{10}
}

type PingResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ActiveMachines uint64                 `protobuf:"varint,1,opt,name=active_machines,json=activeMachines,proto3" json:"active_machines,omitempty"`
	TotalMachines  uint64                 `protobuf:"varint,2,opt,name=total_machines,json=totalMachines,proto3" json:"total_machines,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	mi := &file_nodeapi_nodeapi_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nodeapi_nodeapi_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_nodeapi_nodeapi_proto_rawDescGZIP(), []int{11}
}

func (x *PingResponse) GetActiveMachines() uint64 {
	if x != nil {
		return x.ActiveMachines
	}
	return 0
}

func (x *PingResponse) GetTotalMachines() uint64 {
	if x != nil {
		return x.TotalMachines
	}
	return 0
}

type StoragePool struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Name             string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Uuid             string                 `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Schema           []byte                 `protobuf:"bytes,3,opt,name=schema,proto3" json:"schema,omitempty"`
	AllocatedVolumes uint64                 `protobuf:"varint,4,opt,name=allocated_volumes,json=allocatedVolumes,proto3" json:"allocated_volumes,omitempty"`
	Capacity         uint64                 `protobuf:"varint,5,opt,name=capacity,proto3" json:"capacity,omitempty"`
	Available        uint64                 `protobuf:"varint,6,opt,name=available,proto3" json:"available,omitempty"`
	State            uint64                 `protobuf:"varint,7,opt,name=state,proto3" json:"state,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *StoragePool) Reset() {
	*x = StoragePool{}
	mi := &file_nodeapi_nodeapi_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoragePool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoragePool) ProtoMessage() {}

func (x *StoragePool) ProtoReflect() protoreflect.Message {
	mi := &file_nodeapi_nodeapi_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoragePool.ProtoReflect.Descriptor instead.
func (*StoragePool) Descriptor() ([]byte, []int) {
	return file_nodeapi_nodeapi_proto_rawDescGZIP(), []int{12}
}

func (x *StoragePool) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StoragePool) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *StoragePool) GetSchema() []byte {
	if x != nil {
		return x.Schema
	}
	return nil
}

func (x *StoragePool) GetAllocatedVolumes() uint64 {
	if x != nil {
		return x.AllocatedVolumes
	}
	return 0
}

func (x *StoragePool) GetCapacity() uint64 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

func (x *StoragePool) GetAvailable() uint64 {
	if x != nil {
		return x.Available
	}
	return 0
}

func (x *StoragePool) GetState() uint64 {
	if x != nil {
		return x.State
	}
	return 0
}

type StorageVolume struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Pool          string                 `protobuf:"bytes,2,opt,name=pool,proto3" json:"pool,omitempty"`
	Schema        []byte                 `protobuf:"bytes,3,opt,name=schema,proto3" json:"schema,omitempty"`
	Key           string                 `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	Type          uint32                 `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`
	Allocation    uint64                 `protobuf:"varint,6,opt,name=allocation,proto3" json:"allocation,omitempty"`
	Capacity      uint64                 `protobuf:"varint,7,opt,name=capacity,proto3" json:"capacity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StorageVolume) Reset() {
	*x = StorageVolume{}
	mi := &file_nodeapi_nodeapi_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageVolume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageVolume) ProtoMessage() {}

func (x *StorageVolume) ProtoReflect() protoreflect.Message {
	mi := &file_nodeapi_nodeapi_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageVolume.ProtoReflect.Descriptor instead.
func (*StorageVolume) Descriptor() ([]byte, []int) {
	return file_nodeapi_nodeapi_proto_rawDescGZIP(), []int{13}
}

func (x *StorageVolume) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StorageVolume) GetPool() string {
	if x != nil {
		return x.Pool
	}
	return ""
}

func (x *StorageVolume) GetSchema() []byte {
	if x != nil {
		return x.Schema
	}
	return nil
}

func (x *StorageVolume) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *StorageVolume) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *StorageVolume) GetAllocation() uint64 {
	if x != nil {
		return x.Allocation
	}
	return 0
}

func (x *StorageVolume) GetCapacity() uint64 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

type NetworkBridge struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Stp           string                 `protobuf:"bytes,2,opt,name=stp,proto3" json:"stp,omitempty"`
	Delay         string                 `protobuf:"bytes,3,opt,name=delay,proto3" json:"delay,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkBridge) Reset() {
	*x = NetworkBridge{}
	mi := &file_nodeapi_nodeapi_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkBridge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkBridge) ProtoMessage() {}

func (x *NetworkBridge) ProtoReflect() protoreflect.Message {
	mi := &file_nodeapi_nodeapi_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkBridge.ProtoReflect.Descriptor instead.
func (*NetworkBridge) Descriptor() ([]byte, []int) {
	return file_nodeapi_nodeapi_proto_rawDescGZIP(), []int{14}
}

func (x *NetworkBridge) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NetworkBridge) GetStp() string {
	if x != nil {
		return x.Stp
	}
	return ""
}

func (x *NetworkBridge) GetDelay() string {
	if x != nil {
		return x.Delay
	}
	return ""
}

type NetworkForwardNat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AddressStart  string                 `protobuf:"bytes,1,opt,name=address_start,json=addressStart,proto3" json:"address_start,omitempty"`
	AddressEnd    string                 `protobuf:"bytes,2,opt,name=address_end,json=addressEnd,proto3" json:"address_end,omitempty"`
	PortStart     string                 `protobuf:"bytes,3,opt,name=port_start,json=portStart,proto3" json:"port_start,omitempty"`
	PortEnd       string                 `protobuf:"bytes,4,opt,name=port_end,json=portEnd,proto3" json:"port_end,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkForwardNat) Reset() {
	*x = NetworkForwardNat{}
	mi := &file_nodeapi_nodeapi_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkForwardNat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkForwardNat) ProtoMessage() {}

func (x *NetworkForwardNat) ProtoReflect() protoreflect.Message {
	mi := &file_nodeapi_nodeapi_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkForwardNat.ProtoReflect.Descriptor instead.
func (*NetworkForwardNat) Descriptor() ([]byte, []int) {
	return file_nodeapi_nodeapi_proto_rawDescGZIP(), []int{15}
}

func (x *NetworkForwardNat) GetAddressStart() string {
	if x != nil {
		return x.AddressStart
	}
	return ""
}

func (x *NetworkForwardNat) GetAddressEnd() string {
	if x != nil {
		return x.AddressEnd
	}
	return ""
}

func (x *NetworkForwardNat) GetPortStart() string {
	if x != nil {
		return x.PortStart
	}
	return ""
}

func (x *NetworkForwardNat) GetPortEnd() string {
	if x != nil {
		return x.PortEnd
	}
	return ""
}

type NetworkForward struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Mode          string                 `protobuf:"bytes,1,opt,name=mode,proto3" json:"mode,omitempty"`
	Dev           string                 `protobuf:"bytes,2,opt,name=dev,proto3" json:"dev,omitempty"`
	Nat           *NetworkForwardNat     `protobuf:"bytes,3,opt,name=nat,proto3,oneof" json:"nat,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkForward) Reset() {
	*x = NetworkForward{}
	mi := &file_nodeapi_nodeapi_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkForward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkForward) ProtoMessage() {}

func (x *NetworkForward) ProtoReflect() protoreflect.Message {
	mi := &file_nodeapi_nodeapi_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkForward.ProtoReflect.Descriptor instead.
func (*NetworkForward) Descriptor() ([]byte, []int) {
	return file_nodeapi_nodeapi_proto_rawDescGZIP(), []int{16}
}

func (x *NetworkForward) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *NetworkForward) GetDev() string {
	if x != nil {
		return x.Dev
	}
	return ""
}

func (x *NetworkForward) GetNat() *NetworkForwardNat {
	if x != nil {
		return x.Nat
	}
	return nil
}

type Network struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Uuid          string                 `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Schema        []byte                 `protobuf:"bytes,3,opt,name=schema,proto3" json:"schema,omitempty"`
	Ipv6          bool                   `protobuf:"varint,4,opt,name=ipv6,proto3" json:"ipv6,omitempty"`
	Bridge        *NetworkBridge         `protobuf:"bytes,5,opt,name=bridge,proto3" json:"bridge,omitempty"`
	Mtu           uint64                 `protobuf:"varint,6,opt,name=mtu,proto3" json:"mtu,omitempty"`
	Forward       *NetworkForward        `protobuf:"bytes,7,opt,name=forward,proto3,oneof" json:"forward,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Network) Reset() {
	*x = Network{}
	mi := &file_nodeapi_nodeapi_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Network) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Network) ProtoMessage() {}

func (x *Network) ProtoReflect() protoreflect.Message {
	mi := &file_nodeapi_nodeapi_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Network.ProtoReflect.Descriptor instead.
func (*Network) Descriptor() ([]byte, []int) {
	return file_nodeapi_nodeapi_proto_rawDescGZIP(), []int{17}
}

func (x *Network) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Network) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Network) GetSchema() []byte {
	if x != nil {
		return x.Schema
	}
	return nil
}

func (x *Network) GetIpv6() bool {
	if x != nil {
		return x.Ipv6
	}
	return false
}

func (x *Network) GetBridge() *NetworkBridge {
	if x != nil {
		return x.Bridge
	}
	return nil
}

func (x *Network) GetMtu() uint64 {
	if x != nil {
		return x.Mtu
	}
	return 0
}

func (x *Network) GetForward() *NetworkForward {
	if x != nil {
		return x.Forward
	}
	return nil
}

type Interface struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Mac   string                 `protobuf:"bytes,1,opt,name=mac,proto3" json:"mac,omitempty"`
	Model string                 `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`
	// uuid reference to network
	Network       *string `protobuf:"bytes,3,opt,name=network,proto3,oneof" json:"network,omitempty"`
	Bridge        *string `protobuf:"bytes,4,opt,name=bridge,proto3,oneof" json:"bridge,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Interface) Reset() {
	*x = Interface{}
	mi := &file_nodeapi_nodeapi_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Interface) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interface) ProtoMessage() {}

func (x *Interface) ProtoReflect() protoreflect.Message {
	mi := &file_nodeapi_nodeapi_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interface.ProtoReflect.Descriptor instead.
func (*Interface) Descriptor() ([]byte, []int) {
	return file_nodeapi_nodeapi_proto_rawDescGZIP(), []int{18}
}

func (x *Interface) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *Interface) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *Interface) GetNetwork() string {
	if x != nil && x.Network != nil {
		return *x.Network
	}
	return ""
}

func (x *Interface) GetBridge() string {
	if x != nil && x.Bridge != nil {
		return *x.Bridge
	}
	return ""
}

type Disk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Device        string                 `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Volume        string                 `protobuf:"bytes,3,opt,name=volume,proto3" json:"volume,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Disk) Reset() {
	*x = Disk{}
	mi := &file_nodeapi_nodeapi_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Disk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Disk) ProtoMessage() {}

func (x *Disk) ProtoReflect() protoreflect.Message {
	mi := &file_nodeapi_nodeapi_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Disk.ProtoReflect.Descriptor instead.
func (*Disk) Descriptor() ([]byte, []int) {
	return file_nodeapi_nodeapi_proto_rawDescGZIP(), []int{19}
}

func (x *Disk) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *Disk) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Disk) GetVolume() string {
	if x != nil {
		return x.Volume
	}
	return ""
}

type Machine struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Uuid          string                 `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Schema        []byte                 `protobuf:"bytes,3,opt,name=schema,proto3" json:"schema,omitempty"`
	MaxMem        uint64                 `protobuf:"varint,4,opt,name=max_mem,json=maxMem,proto3" json:"max_mem,omitempty"`
	Memory        uint64                 `protobuf:"varint,5,opt,name=memory,proto3" json:"memory,omitempty"`
	Cores         uint64                 `protobuf:"varint,6,opt,name=cores,proto3" json:"cores,omitempty"`
	Cputime       uint64                 `protobuf:"varint,7,opt,name=cputime,proto3" json:"cputime,omitempty"`
	Interfaces    []*Interface           `protobuf:"bytes,8,rep,name=interfaces,proto3" json:"interfaces,omitempty"`
	Disks         []*Disk                `protobuf:"bytes,9,rep,name=disks,proto3" json:"disks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Machine) Reset() {
	*x = Machine{}
	mi := &file_nodeapi_nodeapi_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Machine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine) ProtoMessage() {}

func (x *Machine) ProtoReflect() protoreflect.Message {
	mi := &file_nodeapi_nodeapi_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Machine.ProtoReflect.Descriptor instead.
func (*Machine) Descriptor() ([]byte, []int) {
	return file_nodeapi_nodeapi_proto_rawDescGZIP(), []int{20}
}

func (x *Machine) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Machine) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Machine) GetSchema() []byte {
	if x != nil {
		return x.Schema
	}
	return nil
}

func (x *Machine) GetMaxMem() uint64 {
	if x != nil {
		return x.MaxMem
	}
	return 0
}

func (x *Machine) GetMemory() uint64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *Machine) GetCores() uint64 {
	if x != nil {
		return x.Cores
	}
	return 0
}

func (x *Machine) GetCputime() uint64 {
	if x != nil {
		return x.Cputime
	}
	return 0
}

func (x *Machine) GetInterfaces() []*Interface {
	if x != nil {
		return x.Interfaces
	}
	return nil
}

func (x *Machine) GetDisks() []*Disk {
	if x != nil {
		return x.Disks
	}
	return nil
}

type MachineList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	List          []*Machine             `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MachineList) Reset() {
	*x = MachineList{}
	mi := &file_nodeapi_nodeapi_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineList) ProtoMessage() {}

func (x *MachineList) ProtoReflect() protoreflect.Message {
	mi := &file_nodeapi_nodeapi_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineList.ProtoReflect.Descriptor instead.
func (*MachineList) Descriptor() ([]byte, []int) {
	return file_nodeapi_nodeapi_proto_rawDescGZIP(), []int{21}
}

func (x *MachineList) GetList() []*Machine {
	if x != nil {
		return x.List
	}
	return nil
}

type StoragePoolList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	List          []*StoragePool         `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoragePoolList) Reset() {
	*x = StoragePoolList{}
	mi := &file_nodeapi_nodeapi_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoragePoolList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoragePoolList) ProtoMessage() {}

func (x *StoragePoolList) ProtoReflect() protoreflect.Message {
	mi := &file_nodeapi_nodeapi_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoragePoolList.ProtoReflect.Descriptor instead.
func (*StoragePoolList) Descriptor() ([]byte, []int) {
	return file_nodeapi_nodeapi_proto_rawDescGZIP(), []int{22}
}

func (x *StoragePoolList) GetList() []*StoragePool {
	if x != nil {
		return x.List
	}
	return nil
}

type StorageVolumeList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	List          []*StorageVolume       `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StorageVolumeList) Reset() {
	*x = StorageVolumeList{}
	mi := &file_nodeapi_nodeapi_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageVolumeList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageVolumeList) ProtoMessage() {}

func (x *StorageVolumeList) ProtoReflect() protoreflect.Message {
	mi := &file_nodeapi_nodeapi_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageVolumeList.ProtoReflect.Descriptor instead.
func (*StorageVolumeList) Descriptor() ([]byte, []int) {
	return file_nodeapi_nodeapi_proto_rawDescGZIP(), []int{23}
}

func (x *StorageVolumeList) GetList() []*StorageVolume {
	if x != nil {
		return x.List
	}
	return nil
}

type NetworkList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	List          []*Network             `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkList) Reset() {
	*x = NetworkList{}
	mi := &file_nodeapi_nodeapi_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkList) ProtoMessage() {}

func (x *NetworkList) ProtoReflect() protoreflect.Message {
	mi := &file_nodeapi_nodeapi_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkList.ProtoReflect.Descriptor instead.
func (*NetworkList) Descriptor() ([]byte, []int) {
	return file_nodeapi_nodeapi_proto_rawDescGZIP(), []int{24}
}

func (x *NetworkList) GetList() []*Network {
	if x != nil {
		return x.List
	}
	return nil
}

var File_nodeapi_nodeapi_proto protoreflect.FileDescriptor

var file_nodeapi_nodeapi_proto_rawDesc = string([]byte{
	0x0a, 0x15, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70, 0x69,
	0x22, 0x15, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x19, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x1b, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x15, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x75, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x16, 0x0a,
	0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x36, 0x0a, 0x11, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x44,
	0x69, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x04, 0x64, 0x69,
	0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x61,
	0x70, 0x69, 0x2e, 0x44, 0x69, 0x73, 0x6b, 0x52, 0x04, 0x64, 0x69, 0x73, 0x6b, 0x22, 0x14, 0x0a,
	0x12, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x44, 0x69, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x32, 0x0a, 0x16, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x22, 0x19, 0x0a, 0x17, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x0d, 0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x5e, 0x0a, 0x0c, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x6d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x73, 0x22, 0xca, 0x01, 0x0a, 0x0b, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x50, 0x6f, 0x6f,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x61, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0xb1,
	0x01, 0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x6c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69,
	0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69,
	0x74, 0x79, 0x22, 0x4b, 0x0a, 0x0d, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x42, 0x72, 0x69,
	0x64, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x74, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x74, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6c,
	0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x22,
	0x93, 0x01, 0x0a, 0x11, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x46, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x4e, 0x61, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x45, 0x6e, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x6f, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x6f,
	0x72, 0x74, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6f,
	0x72, 0x74, 0x45, 0x6e, 0x64, 0x22, 0x71, 0x0a, 0x0e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x64,
	0x65, 0x76, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x65, 0x76, 0x12, 0x31, 0x0a,
	0x03, 0x6e, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6e, 0x6f, 0x64,
	0x65, 0x61, 0x70, 0x69, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x46, 0x6f, 0x72, 0x77,
	0x61, 0x72, 0x64, 0x4e, 0x61, 0x74, 0x48, 0x00, 0x52, 0x03, 0x6e, 0x61, 0x74, 0x88, 0x01, 0x01,
	0x42, 0x06, 0x0a, 0x04, 0x5f, 0x6e, 0x61, 0x74, 0x22, 0xe3, 0x01, 0x0a, 0x07, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x70, 0x76, 0x36, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x69, 0x70, 0x76, 0x36, 0x12, 0x2e, 0x0a, 0x06, 0x62, 0x72, 0x69, 0x64,
	0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x61,
	0x70, 0x69, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65,
	0x52, 0x06, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x74, 0x75, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6d, 0x74, 0x75, 0x12, 0x36, 0x0a, 0x07, 0x66, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6e, 0x6f,
	0x64, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x46, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x07, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x88,
	0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x22, 0x86,
	0x01, 0x0a, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x61, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x61, 0x63, 0x12, 0x14,
	0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x88, 0x01, 0x01,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x22, 0x4a, 0x0a, 0x04, 0x44, 0x69, 0x73, 0x6b, 0x12,
	0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x22, 0x83, 0x02, 0x0a, 0x07, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12,
	0x17, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x5f, 0x6d, 0x65, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x6d, 0x61, 0x78, 0x4d, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x70, 0x75, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x63, 0x70, 0x75, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x32, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x05, 0x64, 0x69, 0x73, 0x6b, 0x73, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x69,
	0x73, 0x6b, 0x52, 0x05, 0x64, 0x69, 0x73, 0x6b, 0x73, 0x22, 0x33, 0x0a, 0x0b, 0x4d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70, 0x69,
	0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x3b,
	0x0a, 0x0f, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x28, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x3f, 0x0a, 0x11, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x2a, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x33, 0x0a, 0x0b,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6e, 0x6f, 0x64, 0x65,
	0x61, 0x70, 0x69, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x32, 0xe6, 0x04, 0x0a, 0x07, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x70, 0x69, 0x12, 0x35, 0x0a,
	0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70, 0x69, 0x2e,
	0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x6e, 0x6f,
	0x64, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x12, 0x1c, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x44, 0x69, 0x73,
	0x6b, 0x12, 0x1a, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x44, 0x69, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x44, 0x69,
	0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0f,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12,
	0x1f, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x73, 0x12, 0x1c, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x10, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x12, 0x20,
	0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x18, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x12,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x73, 0x12, 0x22, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70, 0x69,
	0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x12, 0x1c, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x42, 0x25, 0x5a, 0x23, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x73, 0x6b, 0x70, 0x69, 0x6c, 0x2f,
	0x73, 0x61, 0x6c, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x6d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70,
	0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_nodeapi_nodeapi_proto_rawDescOnce sync.Once
	file_nodeapi_nodeapi_proto_rawDescData []byte
)

func file_nodeapi_nodeapi_proto_rawDescGZIP() []byte {
	file_nodeapi_nodeapi_proto_rawDescOnce.Do(func() {
		file_nodeapi_nodeapi_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_nodeapi_nodeapi_proto_rawDesc), len(file_nodeapi_nodeapi_proto_rawDesc)))
	})
	return file_nodeapi_nodeapi_proto_rawDescData
}

var file_nodeapi_nodeapi_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_nodeapi_nodeapi_proto_goTypes = []any{
	(*ListMachinesRequest)(nil),       // 0: nodeapi.ListMachinesRequest
	(*ListStoragePoolsRequest)(nil),   // 1: nodeapi.ListStoragePoolsRequest
	(*ListStorageVolumesRequest)(nil), // 2: nodeapi.ListStorageVolumesRequest
	(*ListNetworksRequest)(nil),       // 3: nodeapi.ListNetworksRequest
	(*CreateVolumeRequest)(nil),       // 4: nodeapi.CreateVolumeRequest
	(*CreateVolumeResponse)(nil),      // 5: nodeapi.CreateVolumeResponse
	(*AttachDiskRequest)(nil),         // 6: nodeapi.AttachDiskRequest
	(*AttachDiskResponse)(nil),        // 7: nodeapi.AttachDiskResponse
	(*AttachInterfaceRequest)(nil),    // 8: nodeapi.AttachInterfaceRequest
	(*AttachInterfaceResponse)(nil),   // 9: nodeapi.AttachInterfaceResponse
	(*PingRequest)(nil),               // 10: nodeapi.PingRequest
	(*PingResponse)(nil),              // 11: nodeapi.PingResponse
	(*StoragePool)(nil),               // 12: nodeapi.StoragePool
	(*StorageVolume)(nil),             // 13: nodeapi.StorageVolume
	(*NetworkBridge)(nil),             // 14: nodeapi.NetworkBridge
	(*NetworkForwardNat)(nil),         // 15: nodeapi.NetworkForwardNat
	(*NetworkForward)(nil),            // 16: nodeapi.NetworkForward
	(*Network)(nil),                   // 17: nodeapi.Network
	(*Interface)(nil),                 // 18: nodeapi.Interface
	(*Disk)(nil),                      // 19: nodeapi.Disk
	(*Machine)(nil),                   // 20: nodeapi.Machine
	(*MachineList)(nil),               // 21: nodeapi.MachineList
	(*StoragePoolList)(nil),           // 22: nodeapi.StoragePoolList
	(*StorageVolumeList)(nil),         // 23: nodeapi.StorageVolumeList
	(*NetworkList)(nil),               // 24: nodeapi.NetworkList
}
var file_nodeapi_nodeapi_proto_depIdxs = []int32{
	19, // 0: nodeapi.AttachDiskRequest.disk:type_name -> nodeapi.Disk
	15, // 1: nodeapi.NetworkForward.nat:type_name -> nodeapi.NetworkForwardNat
	14, // 2: nodeapi.Network.bridge:type_name -> nodeapi.NetworkBridge
	16, // 3: nodeapi.Network.forward:type_name -> nodeapi.NetworkForward
	18, // 4: nodeapi.Machine.interfaces:type_name -> nodeapi.Interface
	19, // 5: nodeapi.Machine.disks:type_name -> nodeapi.Disk
	20, // 6: nodeapi.MachineList.list:type_name -> nodeapi.Machine
	12, // 7: nodeapi.StoragePoolList.list:type_name -> nodeapi.StoragePool
	13, // 8: nodeapi.StorageVolumeList.list:type_name -> nodeapi.StorageVolume
	17, // 9: nodeapi.NetworkList.list:type_name -> nodeapi.Network
	10, // 10: nodeapi.NodeApi.Ping:input_type -> nodeapi.PingRequest
	4,  // 11: nodeapi.NodeApi.CreateVolume:input_type -> nodeapi.CreateVolumeRequest
	6,  // 12: nodeapi.NodeApi.AttachDisk:input_type -> nodeapi.AttachDiskRequest
	8,  // 13: nodeapi.NodeApi.AttachInterface:input_type -> nodeapi.AttachInterfaceRequest
	0,  // 14: nodeapi.NodeApi.ListMachines:input_type -> nodeapi.ListMachinesRequest
	1,  // 15: nodeapi.NodeApi.ListStoragePools:input_type -> nodeapi.ListStoragePoolsRequest
	2,  // 16: nodeapi.NodeApi.ListStorageVolumes:input_type -> nodeapi.ListStorageVolumesRequest
	3,  // 17: nodeapi.NodeApi.ListNetworks:input_type -> nodeapi.ListNetworksRequest
	11, // 18: nodeapi.NodeApi.Ping:output_type -> nodeapi.PingResponse
	5,  // 19: nodeapi.NodeApi.CreateVolume:output_type -> nodeapi.CreateVolumeResponse
	7,  // 20: nodeapi.NodeApi.AttachDisk:output_type -> nodeapi.AttachDiskResponse
	9,  // 21: nodeapi.NodeApi.AttachInterface:output_type -> nodeapi.AttachInterfaceResponse
	21, // 22: nodeapi.NodeApi.ListMachines:output_type -> nodeapi.MachineList
	22, // 23: nodeapi.NodeApi.ListStoragePools:output_type -> nodeapi.StoragePoolList
	23, // 24: nodeapi.NodeApi.ListStorageVolumes:output_type -> nodeapi.StorageVolumeList
	24, // 25: nodeapi.NodeApi.ListNetworks:output_type -> nodeapi.NetworkList
	18, // [18:26] is the sub-list for method output_type
	10, // [10:18] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_nodeapi_nodeapi_proto_init() }
func file_nodeapi_nodeapi_proto_init() {
	if File_nodeapi_nodeapi_proto != nil {
		return
	}
	file_nodeapi_nodeapi_proto_msgTypes[16].OneofWrappers = []any{}
	file_nodeapi_nodeapi_proto_msgTypes[17].OneofWrappers = []any{}
	file_nodeapi_nodeapi_proto_msgTypes[18].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_nodeapi_nodeapi_proto_rawDesc), len(file_nodeapi_nodeapi_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_nodeapi_nodeapi_proto_goTypes,
		DependencyIndexes: file_nodeapi_nodeapi_proto_depIdxs,
		MessageInfos:      file_nodeapi_nodeapi_proto_msgTypes,
	}.Build()
	File_nodeapi_nodeapi_proto = out.File
	file_nodeapi_nodeapi_proto_goTypes = nil
	file_nodeapi_nodeapi_proto_depIdxs = nil
}
