syntax = "proto3";
package nodeapi;

option go_package = "github.com/eskpil/salmon/vm/nodeapi";

message ListMachinesRequest {}
message ListStoragePoolsRequest {}
message ListStorageVolumesRequest {}
message ListNetworksRequest {}

message CreateVolumeRequest {
    string name = 1;
    string pool = 2;
    string format = 3;
    uint64 allocation = 4;
}

message CreateVolumeResponse {

}

message AttachDiskRequest {
    Disk disk = 1;
}

message AttachDiskResponse {

}

message AttachInterfaceRequest {
    string network = 1;
}
message AttachInterfaceResponse {}

message PingRequest {}
message PingResponse {
    Node node = 1;
}

service NodeApi {
    rpc Ping(PingRequest) returns (PingResponse) {}

    rpc CreateVolume(CreateVolumeRequest) returns (CreateVolumeResponse) {}

    rpc AttachDisk(AttachDiskRequest) returns (AttachDiskResponse) {}
    rpc AttachInterface(AttachInterfaceRequest) returns (AttachInterfaceResponse) {}

    rpc ListMachines(ListMachinesRequest) returns (MachineList) {}
    rpc ListStoragePools(ListStoragePoolsRequest) returns (StoragePoolList) {}
    rpc ListStorageVolumes(ListStorageVolumesRequest) returns (StorageVolumeList) {}
    rpc ListNetworks(ListNetworksRequest) returns (NetworkList) {}
}

message Topology {
    uint64 cores = 1;
    uint64 threads = 2;
    uint64 memory = 3;
}

message Node {
    uint64 active_machines = 1;
    uint64 total_machines = 2;

    string hostname = 3;
    string kernel = 4;
    string uptime = 5;

    Topology topology = 6;
}

message StoragePool {
    string name = 1;
    string uuid = 2;
    bytes schema = 3;

    uint64 allocated_volumes = 4;
    uint64 capacity = 5;
    uint64 available = 6;
    uint64 state = 7;

    string kind = 8;
    uint64 allocated = 9;
}

message StorageVolume {
    string name = 1;
    string pool = 2;
    bytes schema = 3;

    string key = 4;
    uint32 type = 5;
    uint64 allocation = 6;
    uint64 capacity = 7;
}

message NetworkBridge {
    string name = 1;
    string stp = 2;
    string delay = 3;
}

message NetworkForwardNat {
    string address_start = 1;
    string address_end = 2;

    string port_start = 3;
    string port_end = 4;
}

message NetworkForward {
    string mode = 1;
    string dev = 2;

    optional NetworkForwardNat nat = 3;
}

message Network {
    string name = 1;
    string uuid = 2;
    bytes schema = 3;

    bool ipv6 = 4;

    NetworkBridge bridge = 5;
    uint64 mtu = 6;
    optional NetworkForward forward = 7;
}

message Interface {
    string mac = 1;
    string model = 2;

    // uuid reference to network
    optional string network = 3;
    optional string bridge = 4;
}

message Disk {
    string device = 1;
    string type = 2;
    string volume = 3;
}

message Machine {
    string name = 1;
    string uuid = 2;
    bytes schema = 3;

    Topology topology = 4;

    repeated Interface interfaces = 5;
    repeated Disk disks = 6;
}

message MachineList {
    repeated Machine list = 1;
}

message StoragePoolList {
    repeated StoragePool list = 1;
}

message StorageVolumeList {
    repeated StorageVolume list = 1;
}

message NetworkList {
    repeated Network list = 1;
}
