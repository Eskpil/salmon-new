syntax = "proto3";
package controllerapi;

import "google/protobuf/struct.proto";

option go_package = "github.com/eskpil/salmon/vm/controllerapi";

// TODO: Add filtering, now all resources returned are those
//       who has the node as owner and status requested.
message WatchRequest {
    string kind = 1;
    optional string id = 2;
    optional Owner owner = 3;
}

message WatchResponse {
    Resource resource = 1;
}

message ListRequest {
    string kind = 1;
    optional string id = 2;
    optional Owner owner = 3;
}

message ListResponse {
    repeated Resource resources = 1;
}

message PatchRequest {
    string kind = 1;
    optional string id = 2;
    optional Owner owner = 3;
    bytes patches = 4;
}

message PatchResponse {
    bool ok = 1;
}

message CreateRequest {
    string kind = 1;
    map<string, string> annotations = 2;
    optional Owner owner = 3;
    google.protobuf.Struct spec = 4;
    Status status = 5;
}

message CreateResponse {

}

service ControllerApi {
    rpc Watch(WatchRequest) returns (stream WatchResponse);
    rpc List(ListRequest) returns (ListResponse);
    rpc Create(CreateRequest) returns (CreateResponse);
    rpc Patch(PatchRequest) returns (PatchResponse);
}


message Owner {
    string kind = 1;
    string id = 2;
}

message Status  {
    string phase = 1;
}

message Resource {
    string id = 1;
    string kind = 2;
    map<string, string> annotations = 3;
    optional Owner owner = 4;
    google.protobuf.Struct spec = 5;
    Status status = 6;
}
